[1/9] Performing build step for 'bootloader'
[1/1] cd /home/thomas/Documentos/Thomas/SerialBridge/build/bootloader/esp-idf/esptool_py && /home/thomas/.espressif/python_env/idf5.0_py3.10_env/bin/python /home/thomas/Documentos/DIEL/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/thomas/Documentos/Thomas/SerialBridge/build/bootloader/bootloader.bin
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/9] No install step for 'bootloader'
[3/9] Completed 'bootloader'
[4/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/uart_echo_example_main.c.obj
/home/thomas/Documentos/Thomas/SerialBridge/main/uart_echo_example_main.c: In function 'echo_task':
/home/thomas/Documentos/Thomas/SerialBridge/main/uart_echo_example_main.c:165:14: warning: passing argument 1 of 'free' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
  165 |         free(msg);
      |              ^~~
In file included from /home/thomas/Documentos/DIEL/esp-idf-v5.0/components/newlib/platform_include/assert.h:13,
                 from /home/thomas/.espressif/tools/xtensa-esp32-elf/esp-2022r1-11.2.0/xtensa-esp32-elf/xtensa-esp32-elf/sys-include/sys/reent.h:503,
                 from /home/thomas/Documentos/DIEL/esp-idf-v5.0/components/newlib/platform_include/sys/reent.h:9,
                 from /home/thomas/.espressif/tools/xtensa-esp32-elf/esp-2022r1-11.2.0/xtensa-esp32-elf/xtensa-esp32-elf/sys-include/stdio.h:60,
                 from /home/thomas/Documentos/Thomas/SerialBridge/main/uart_echo_example_main.c:7:
/home/thomas/.espressif/tools/xtensa-esp32-elf/esp-2022r1-11.2.0/xtensa-esp32-elf/xtensa-esp32-elf/sys-include/stdlib.h:98:15: note: expected 'void *' but argument is of type 'const char *'
   98 | void    free (void *) _NOTHROW;
      |               ^~~~~~
At top level:
/home/thomas/Documentos/Thomas/SerialBridge/main/uart_echo_example_main.c:38:20: warning: 'TAG' defined but not used [-Wunused-variable]
   38 | static const char *TAG = "MQTT_TCP";
      |                    ^~~
[5/9] Linking C static library esp-idf/main/libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable uart_echo.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated /home/thomas/Documentos/Thomas/SerialBridge/build/uart_echo.bin
[9/9] cd /home/thomas/Documentos/Thomas/SerialBridge/build/esp-idf/esptool_py && /home/thomas/.espressif/python_env/idf5.0_py3.10_env/bin/python /home/thomas/Documentos/DIEL/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/thomas/Documentos/Thomas/SerialBridge/build/partition_table/partition-table.bin /home/thomas/Documentos/Thomas/SerialBridge/build/uart_echo.bin
uart_echo.bin binary size 0xd0ff0 bytes. Smallest app partition is 0x100000 bytes. 0x2f010 bytes (18%) free.
